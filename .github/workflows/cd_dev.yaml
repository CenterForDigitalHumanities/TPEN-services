name: TPEN3 Services dev deploy on PR to main
on:
  pull_request:
    branches: main
jobs:
  if: ${{ github.event_name !== 'push' }}
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge with main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: ${{ github.head_ref }}
          github_token: ${{ secrets.BRY_PAT }}
          message: Merge main into this branch to deploy to dev for testing.
  test:
    needs: merge-branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: "21"
      - name: Cache node modules
        uses: actions/cache@master
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies and run the test
        run: |
          npm install
          npm run allTests
  deploy:
    if: github.event.pull_request.draft == false
    needs:
      - merge-branch
      - test
    strategy:
      matrix:
        machines:
          - vlcdhp02
    runs-on: ${{ matrix.machines }}
    steps:
      - uses: actions/checkout@master
      - name: Deploy the app on the server
        run: |
          if [[ ! -e /srv/node/logs/tpen3_services.txt ]]; then
              mkdir -p /srv/node/logs
              touch /srv/node/logs/tpen3_services.txt
          fi
          cd /srv/node/tpen-services/
          pm2 stop tpen3_services
          git stash
          git pull
          git checkout ${{ github.head_ref }}
          git pull
          npm install
          pm2 -s start -i max bin/tpen3_services.mjs
